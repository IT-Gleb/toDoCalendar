ARG NODE_VERSION=20.14.0

FROM node:${NODE_VERSION}-alpine

# Use development node environment by default.
RUN apk add --no-cache tzdata
ENV TZ Europe/Moscow
# ENV NODE_ENV dev
# ENV DATABASE_NAME="mydb"
# ENV DATABASE_PORT="5432"
# ENV DATABASE_USER="myuser"
# ENV DATABASE_HOST="localhost"
# ENV DATABASE_PASSWORD "54321"


WORKDIR /usr/src/app

ENV NEXT_TELEMETRY_DISABLED 1

# ENV NODE_ENV dev
# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
#    --mount=type=cache,target=/root/.npm \
#    npm ci --omit=dev
    npm ci

# Run the application as a non-root user.
#USER node

# Copy the rest of the source files into the image.
COPY . .

# Expose the port that the application listens on.
EXPOSE 3001

# Run the application.
CMD ["npm", "run", "dev"]
